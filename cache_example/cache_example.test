<?php
/**
 * @file
 * Test case for testing the cache example module.
 */

/**
 * 缓存示例模块的测试用例
 *
 * @ingroup cache_example
 */
class CacheExampleTestCase extends DrupalWebTestCase {

  /**
   * {@inheritdoc}
   */
  public static function getInfo() {
    return array(
      'name' => 'Cache example functionality',
      'description' => 'Test the Cache Example module.',
      'group' => 'Examples',
    );
  }

  /**
   * Enable module.
   */
  public function setUp() {
    parent::setUp('cache_example');
  }

  /**
   * cache_example功能测试。
   *
   * Load cache example page and test if displaying uncached version. Reload
   * once again and test if displaying cached version. Find reload link and
   * click on it. Clear cache at the end and test if displaying uncached
   * version again.
   * 载入缓存示例页面，测试非缓存版本的显示。重新载入一次，测试是否显示的是缓存版本。
   * 查找重新载入的连接并点击。最后清除缓存，测试是否重新显示未缓存版本。
   */
  public function testCacheExampleBasic() {
    // 清除缓存需要管理权限。
    $admin_user = $this->drupalCreateUser(array('administer site configuration'));
    $this->drupalLogin($admin_user);

    // 获取非缓存的页面，用输出页面内容进行判断。
    $this->drupalGet('examples/cache_example');
    $this->assertText('Source: actual file search');
    // 重新载入页面，测试是否输出了缓存内容。
    $this->drupalGet('examples/cache_example');
    $this->assertText('Source: cached');

    // 点击按钮，清除文件数量的缓存。
    $this->drupalPost('examples/cache_example', array(), t('Explicitly remove cached file count'));
    $this->assertText('Source: actual file search');

    // 创建一个缓存项。首先确认他是不是存在。
    $this->assertText('Cache item does not exist');
    $this->drupalPost('examples/cache_example', array('expiration' => -10), t('Create a cache item with this expiration'));
    // 我们现在应该有了个过期的缓存项。
    $this->assertText('Cache item exists and is set to expire');
    // 进行过期操作。
    $this->drupalPost('examples/cache_example', array('cache_clear_type' => 'expire'), t('Clear or expire cache'));
    // 校验是否被清除。
    $this->assertText('Cache item does not exist');

    // 创建一个缓存项，这里我们把时间设置成不会过期。
    $this->drupalPost('examples/cache_example', array('expiration' => 'never_remove'), t('Create a cache item with this expiration'));
    // 现在我们有了一个不会被过期的项目。
    $this->assertText('Cache item exists and is set to expire at Never expires');
    // 进行过期操作。
    $this->drupalPost('examples/cache_example', array('cache_clear_type' => 'expire'), t('Clear or expire cache'));
    // 这里应该没有被清除。
    $this->assertText('Cache item exists and is set to expire at Never expires');
    // 接下来进行轻质清除。
    $this->drupalPost('examples/cache_example', array('cache_clear_type' => 'remove_wildcard'), t('Clear or expire cache'));
    // 检查他是否被清除。
    $this->assertText('Cache item does not exist');
  }

}
