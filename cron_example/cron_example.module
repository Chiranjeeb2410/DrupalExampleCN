<?php

/**
 * @file
 * Demonstrates use of the Cron API in Drupal - hook_cron()
 */

/**
 * @defgroup cron_example Example: Cron
 * @ingroup examples
 * @{
 * 示范Cron API的使用，其中包含了hook_cron()以及hook_cron_queue_info()
 *
 * 本示例是Example项目(http://drupal.org/project/examples)的一部分
 */

/**
 * Implements hook_menu().
 */
function cron_example_menu() {

  $items['examples/cron_example'] = array(
    'title' => 'Cron Example',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cron_example_form'),
    'access callback' => TRUE,
  );

  return $items;
}

/**
 * 这一Form提供了到cron.php的链接。
 */
function cron_example_form($form, &$form_state) {
  $form['status'] = array(
    '#type' => 'fieldset',
    '#title' => t('Cron status information'),
  );
  $form['status']['intro'] = array(
    '#markup' => '<div>' . t('The cron example demonstrates hook_cron() and hook_cron_queue_info() processing. If you have administrative privileges you can run cron from this page and see the results.') . '</div>',
  );
  $form['status']['last'] = array(
    '#markup' => '<div>' . t('cron_example_cron() will next execute the first time cron runs after %time (%seconds seconds from now)',
        array(
          '%time' => date_iso8601(variable_get('cron_example_next_execution', time())),
          '%seconds' => variable_get('cron_example_next_execution', time()) - time(),
        )
      ) . '</div>',
  );

  if (user_access('administer site configuration')) {
    $form['cron_run'] = array(
      '#type' => 'fieldset',
      '#title' => t('Run cron manually'),
    );
    $form['cron_run']['cron_reset'] = array(
      '#type' => 'checkbox',
      '#title' => t("Run cron_example's cron regardless of whether interval has expired."),
      '#default_value' => FALSE,
    );
    $form['cron_run']['cron_trigger'] = array(
      '#type' => 'submit',
      '#value' => t('Run cron now'),
      '#submit' => array('cron_example_form_run_submit'),
    );
  }

  $form['cron_queue_setup'] = array(
    '#type' => 'fieldset',
    '#title' => t('Cron queue setup (for hook_cron_queue_info(), etc.)'),
  );
  $queue_1 = DrupalQueue::get('cron_example_queue_1');
  $queue_2 = DrupalQueue::get('cron_example_queue_2');
  $form['cron_queue_setup']['current_cron_queue_status'] = array(
    '#markup' => '<div>' . t('There are currently %queue_1 items in queue 1 and %queue_2 items in queue 2',
        array(
          '%queue_1' => $queue_1->numberOfItems(),
          '%queue_2' => $queue_2->numberOfItems(),
        )) . '</div>',
  );
  $form['cron_queue_setup']['num_items'] = array(
    '#type' => 'select',
    '#title' => t('Number of items to add to queue'),
    '#options' => drupal_map_assoc(array(1, 5, 10, 100, 1000)),
    '#default_value' => 5,
  );
  $form['cron_queue_setup']['queue'] = array(
    '#type' => 'radios',
    '#title' => t('Queue to add items to'),
    '#options' => array(
      'cron_example_queue_1' => t('Queue 1'),
      'cron_example_queue_2' => t('Queue 2'),
    ),
    '#default_value' => 'cron_example_queue_1',
  );
  $form['cron_queue_setup']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Add jobs to queue'),
    '#submit' => array('cron_example_add_jobs_to_queue'),
  );

  $form['configuration'] = array(
    '#type' => 'fieldset',
    '#title' => t('Configuration of cron_example_cron()'),
  );
  $form['configuration']['cron_example_interval'] = array(
    '#type' => 'select',
    '#title' => t('Cron interval'),
    '#description' => t('Time after which cron_example_cron will respond to a processing request.'),
    '#default_value' => variable_get('cron_example_interval', 60 * 60),
    '#options' => array(
      60 => t('1 minute'),
      300 => t('5 minutes'),
      3600 => t('1 hour'),
      60 * 60 * 24 => t('1 day'),
    ),
  );

  return system_settings_form($form);
}

/**
 * 让用户可以直接执行Cron，可以选择强制执行
 */
function cron_example_form_run_submit($form, &$form_state) {
  if (!empty($form_state['values']['cron_reset'])) {
    variable_set('cron_example_next_execution', 0);
  }

  // 一般不会这样使用全局变量。这里使用这种用法来简化说明该CRON是否由这一Form运行的。

  $GLOBALS['cron_example_show_status_message'] = TRUE;
  if (drupal_cron_run()) {
    drupal_set_message(t('Cron ran successfully.'));
  } else {
    drupal_set_message(t('Cron run failed.'), 'error');
  }
}

/**
 * 提交，添加条目到队列中。
 */
function cron_example_add_jobs_to_queue($form, &$form_state) {
  $queue = $form_state['values']['queue'];
  $num_items = $form_state['values']['num_items'];

  $queue = DrupalQueue::get($queue);
  for ($i = 1; $i <= $num_items; $i++) {
    $item = new stdClass();
    $item->created = time();
    $item->sequence = $i;
    $queue->createItem($item);
  }

}

/**
 * Implements hook_cron().
 *
 * hook_cron() 是Drupal 7之前的陈旧Hook，用于进行“后台”处理。他在每次Drupal Cron的时候运行，而且必须确定其中的内容
 *
 * 在这个例子中，在变量'cron_example_next_execution'中记录了一个时间，如果到了这个时间，则会运行一次watchdog()，然后会复位这个变量。
 */
function cron_example_cron() {
  // 缺省是一个小时的间隔。当然，这要求cron一个小时内至少运行一次，才能满足这一要求。
  $interval = variable_get('cron_example_interval', 60 * 60);
  watchdog('cron_example', 'cron_example fired!');

  // 我们通常不想要每次Cron一运行，就运行这段代码。所以我们在变量中保存一个下次运行的时间。
  if (time() >= variable_get('cron_example_next_execution', 0)) {

    // 这是一个关于CRON的蠢例子。只是为了在不改变数据库的情况下证明作业的运行。
    watchdog('cron_example', 'cron_example ran');
    if (!empty($GLOBALS['cron_example_show_status_message'])) {
      drupal_set_message(t('cron_example executed at %time', array('%time' => date_iso8601(time(0)))));
    }
    variable_set('cron_example_next_execution', time() + $interval);
  }
}

/**
 * Implements hook_cron_queue_info().
 *
 * hook_cron_queue_info() 以及相关的一系列Hook是从Drupal 7开始出现的，进程通过这些Hook可以向CRON运行时处理的队列中加入作业。
 * 这里进行了Queue的描述以及作业回调的定义，作业回调函数需要进行实现。
 *
 * 所有队列细节都由cron_queue的实现完成，所以一般不需要对DrupalQueue()进行深入了解。
 *
 * @see queue_example.module
 */
function cron_example_cron_queue_info() {
  $queues['cron_example_queue_1'] = array(
    'worker callback' => 'cron_example_queue_1_worker',
    // 每次cron的时候最多占用1秒钟执行这一队列
    'time' => 1,
  );
  $queues['cron_example_queue_2'] = array(
    'worker callback' => 'cron_example_queue_2_worker',
    'time' => 10,
  );
  return $queues;
}

/**
 * 队列中的简单作业。
 *
 * @param object $item
 *   任何工作目标。
 */
function cron_example_queue_1_worker($item) {
  cron_example_queue_report_work(1, $item);
}

/**
 * 队列中的简单作业。
 *
 * @param object $item
 *  任何工作目标。
 */
function cron_example_queue_2_worker($item) {
  cron_example_queue_report_work(2, $item);
}

/**
 * 作业的简单报告。
 *
 * @param int $worker
 *   作业编号。
 * @param object $item
 *   保存在cron队列中的条目。
 */
function cron_example_queue_report_work($worker, $item) {
  if (!empty($GLOBALS['cron_example_show_status_message'])) {
    drupal_set_message(
      t('Queue @worker worker processed item with sequence @sequence created at @time',
        array(
          '@worker' => $worker,
          '@sequence' => $item->sequence,
          '@time' => date_iso8601($item->created),
        )
      )
    );
  }
  watchdog('cron_example', t('Queue @worker worker processed item with sequence @sequence created at @time'),
    array(
      '@worker' => $worker,
      '@sequence' => $item->sequence,
      '@time' => date_iso8601($item->created),
    )
  );
}

/**
 * @} End of "defgroup cron_example".
 */
