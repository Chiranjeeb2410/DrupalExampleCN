<?php

/**
 * @file
 * form_example 模块的测试文件。
 */

/**
 * form_example 的缺省测试用例。
 *
 * @ingroup form_example
 */
class FormExampleTestCase extends DrupalWebTestCase {

  /**
   * {@inheritdoc}
   */
  public static function getInfo() {
    return array(
      'name' => 'Form Example',
      'description' => 'Various tests on the form_example module.' ,
      'group' => 'Examples',
    );
  }

  /**
   * 启用模块。
   */
  public function setUp() {
    parent::setUp('form_example');
  }

  /**
   * 逐个测试教程内容。
   */
  public function testTutorials() {
    // 教程 #1
    $this->drupalGet('examples/form_example/tutorial');
    $this->assertText(t('#9'));

    // #2
    $this->drupalPost('examples/form_example/tutorial/2', array('name' => t('name')), t('Submit'));

    // #4
    $this->drupalPost('examples/form_example/tutorial/4',
      array('first' => t('firstname'), 'last' => t('lastname')), t('Submit'));
    $this->drupalPost('examples/form_example/tutorial/4', array(), t('Submit'));
    $this->assertText(t('First name field is required'));
    $this->assertText(t('Last name field is required'));

    // #5
    $this->drupalPost('examples/form_example/tutorial/5',
      array('first' => t('firstname'), 'last' => t('lastname')), t('Submit'));
    $this->assertText(t('Please enter your first name'));
    $this->drupalPost('examples/form_example/tutorial/4', array(), t('Submit'));
    $this->assertText(t('First name field is required'));
    $this->assertText(t('Last name field is required'));

    // #6
    $this->drupalPost(
      'examples/form_example/tutorial/6',
      array(
        'first' => t('firstname'),
        'last' => t('lastname'),
        'year_of_birth' => 1955,
      ),
      t('Submit'));
    $this->assertNoText(t('Enter a year between 1900 and 2000'));
    $this->drupalPost(
      'examples/form_example/tutorial/6',
      array(
        'first' => t('firstname'),
        'last' => t('lastname'),
        'year_of_birth' => 1855,
      ),
      t('Submit')
    );

    $this->assertText(t('Enter a year between 1900 and 2000'));

    // #7
    $this->drupalPost(
      'examples/form_example/tutorial/7',
      array(
        'first' => t('firstname'),
        'last' => t('lastname'),
        'year_of_birth' => 1955,
      ),
      t('Submit')
    );
    $this->assertText(t('The form has been submitted. name="firstname lastname", year of birth=1955'));
    $this->drupalPost(
      'examples/form_example/tutorial/7',
      array(
        'first' => t('firstname'),
        'last' => t('lastname'),
        'year_of_birth' => 1855,
      ),
      t('Submit')
    );

    $this->assertText(t('Enter a year between 1900 and 2000'));

    // 测试教程 #8.
    $this->drupalPost(
      'examples/form_example/tutorial/8',
      array(
        'first' => t('firstname'),
        'last' => t('lastname'),
        'year_of_birth' => 1955,
      ),
      t('Next >>')
    );

    $this->drupalPost(NULL, array('color' => t('green')), t('<< Back'));
    $this->drupalPost(NULL, array(), t('Next >>'));
    $this->drupalPost(NULL, array('color' => t('red')), t('Submit'));
    $this->assertText(t('The form has been submitted. name="firstname lastname", year of birth=1955'));
    $this->assertText(t('And the favorite color is red'));

    // #9
    $url = 'examples/form_example/tutorial/9';
    for ($i = 1; $i <= 4; $i++) {
      if ($i > 1) {
        // Later steps of multistep form take NULL.
        $url = NULL;
      }
      $this->drupalPost(
        $url,
        array(
          "name[$i][first]" => "firstname $i",
          "name[$i][last]" => "lastname $i",
          "name[$i][year_of_birth]" => 1950 + $i,
        ),
        t('Add another name')
      );
      $this->assertText(t('Name #@num', array('@num' => $i + 1)));
    }

    // 删掉之前输入的姓（ #5 ）。
    $this->drupalPost(NULL, array(), t('Remove latest name'));
    $this->assertNoText("Name #5");

    $this->drupalPost(NULL, array(), t('Submit'));

    $this->assertText('Form 9 has been submitted');
    for ($i = 1; $i <= 4; $i++) {
      $this->assertText(t('@num: firstname @num lastname @num (@year)', array('@num' => $i, '@year' => 1950 + $i)));
    }

    // #10
    $url = 'examples/form_example/tutorial/10';

    $this->drupalPost($url, array(), t('Submit'));
    $this->assertText(t('No file was uploaded.'));

    // 获取示例图像。
    $images = $this->drupalGetTestFiles('image');
    foreach ($images as $image) {
      $this->drupalPost($url, array('files[file]' => drupal_realpath($image->uri)), t('Submit'));
      $this->assertText(t('The form has been submitted and the image has been saved, filename: @filename.', array('@filename' => $image->filename)));
    }

    // #11: 确认 Form
    // 尝试在缺少名字的情况下进行提交。
    $url = 'examples/form_example/tutorial/11';
    $this->drupalPost($url, array(), t('Submit'));
    $this->assertText('Name field is required.');

    // 我们是否能够输入名字，并获得确认信息。
    $this->drupalPost(
      $url,
      array('name' => t('name 1')), t('Submit')
    );
    $this->assertText(t('Is this really your name?'));
    $this->assertFieldById('edit-name', 'name 1');

    // 检查 'yes' 按钮。
    $confirmation_text = t("Confirmation form submission recieved. According to your submission your name is '@name'", array('@name' => 'name 1'));
    $url = 'examples/form_example/tutorial/11/confirm/name%201';
    $this->drupalPost($url, array(), t('This is my name'));
    $this->assertText($confirmation_text);

    // 检查 'no' 按钮。
    $this->drupalGet($url);
    $this->clickLink(t('Nope, not my name'));
    $this->assertNoText($confirmation_text);
  }

  /**
   * 测试向导教程。
   *
   * @TODO 利用 drupal_form_submit 增强
   */
  public function testWizard() {
    // 检查是否存在向导示例。
    $this->drupalGet('examples/form_example/wizard');
    $this->assertText(t('Extensible wizard example'));

    $first_name = $this->randomName(8);
    $last_name  = $this->randomName(8);
    $city = $this->randomName(8);
    $aunts_name = $this->randomName(8);

    // 提交向导的第一步。
    $options = array(
      'first_name' => $first_name,
      'last_name'  => $last_name,
    );
    $this->drupalPost('examples/form_example/wizard', $options, t('Next'));

    // 创建了一个城市标签，还有两个按钮：上一步和下一步。
    $this->assertText(t('Hint: Do not enter "San Francisco", and do not leave this out.'));

    // 退回上一步，检查是否保存了刚输入的值。
    $this->drupalPost(NULL, array(), t('Previous'));
    $this->assertFieldByName('first_name', $first_name);
    $this->assertFieldByName('last_name', $last_name);

    // 下一步，这里我们应该回到我们之前的输入。
    $this->drupalPost(NULL, array(), t('Next'));
    $this->assertText(t('Hint: Do not enter "San Francisco", and do not leave this out.'));

    // 试试 "San Francisco" 。
    $this->drupalPost(NULL, array('city' => 'San Francisco'), t('Next'));
    $this->assertText(t('You were warned not to enter "San Francisco"'));

    // 试试真正的城市
    $this->drupalPost(NULL, array('city' => $city), t('Next'));

    // 输入阿姨的名字，然后上一步。
    $this->drupalPost(NULL, array('aunts_name' => $aunts_name), t('Previous'));
    $this->assertFieldByName('city', $city);

    // 下一步，然后点击结束，检查结果。
    $this->drupalPost(NULL, array(), t('Next'));
    $this->drupalPost(NULL, array('aunts_name' => $aunts_name), t('Finish'));

    $this->assertRaw(t('[first_name] =&gt; @first_name', array('@first_name' => $first_name)));
    $this->assertRaw(t('[last_name] =&gt; @last_name', array('@last_name' => $last_name)));
    $this->assertRaw(t('[city] =&gt; @city', array('@city' => $city)));
    $this->assertRaw(t('[aunts_name] =&gt; @aunts_name', array('@aunts_name' => $aunts_name)));
  }


  /**
   * 测试 element_example
   */
  public function testElementExample() {
    // Make one basic POST with a set of values and check for correct responses.
    // 做一个基础的 POST，其中包含一系列的值，并检查返回内容。
    $edit = array(
      'a_form_example_textfield' => $this->randomName(),
      'a_form_example_checkbox' => TRUE,
      'a_form_example_element_discrete[areacode]' => sprintf('%03d', rand(0, 999)),
      'a_form_example_element_discrete[prefix]' => sprintf('%03d', rand(0, 999)),
      'a_form_example_element_discrete[extension]' => sprintf('%04d', rand(0, 9999)),
      'a_form_example_element_combined[areacode]' => sprintf('%03d', rand(0, 999)),
      'a_form_example_element_combined[prefix]' => sprintf('%03d', rand(0, 999)),
      'a_form_example_element_combined[extension]' => sprintf('%04d', rand(0, 9999)),
    );
    $this->drupalPost('examples/form_example/element_example', $edit, t('Submit'));
    $this->assertText(t('a_form_example_textfield has value @value', array('@value' => $edit['a_form_example_textfield'])));
    $this->assertText(t('a_form_example_checkbox has value 1'));
    $this->assertPattern(t('/areacode.*!areacode/', array('!areacode' => $edit['a_form_example_element_discrete[areacode]'])));
    $this->assertPattern(t('/prefix.*!prefix/', array('!prefix' => $edit['a_form_example_element_discrete[prefix]'])));
    $this->assertPattern(t('/extension.*!extension/', array('!extension' => $edit['a_form_example_element_discrete[extension]'])));

    $this->assertText(t('a_form_example_element_combined has value @value', array('@value' => $edit['a_form_example_element_combined[areacode]'] . $edit['a_form_example_element_combined[prefix]'] . $edit['a_form_example_element_combined[extension]'])));

    // 反选 checkbox， 检查响应。
    $edit['a_form_example_checkbox'] = FALSE;
    $this->drupalPost('examples/form_example/element_example', $edit, t('Submit'));
    $this->assertText(t('a_form_example_checkbox has value 0'));
  }
}
