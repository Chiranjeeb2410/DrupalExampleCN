<?php

/**
 * @file
 * test file for action_example module.
 */

/**
 * action_example模块的缺省测试用例。
 * @ingroup action_example
 */
class ActionExampleTestCase extends TriggerWebTestCase {

  /**
   * {@inheritdoc}
   */
  public static function getInfo() {
    return array(
      'name' => 'Action example',
      'description' => '对action_example模块进行多种测试。' ,
      'group' => 'Examples',
    );
  }

  /**
   * {@inheritdoc}
   */
  public function setUp() {
    parent::setUp('trigger', 'action_example');
  }

  /**
   * 测试动作.
   *
   * 1. action_example_basic_action: 配置用户登录时触发该动作
   * 2. action_example_unblock_user_action: 当查看一个用户信息的时候，解锁该用户
   * 3. action_example_node_sticky_action: 创建一个用户，配置该用户创建的内容置顶，
   *    用该用户生成内容，然后查看该内容是否置顶。
   */
  public function testActionExample() {
    // 创建一个管理用户
    $admin_user = $this->drupalCreateUser(
      array(
        'administer actions',
        'access comments',
        'access content',
        'post comments',
        'skip comment approval',
        'create article content',
        'access user profiles',
        'administer users',
      )
    );
    $this->drupalLogin($admin_user);

    // 1. 指派基础动作; 然后登出并登录用户，查看是否显示信息。
    $hash = drupal_hash_base64('action_example_basic_action');
    $edit = array('aid' => $hash);
    $this->drupalPost('admin/structure/trigger/user', $edit, t('Assign'), array(), array(), 'trigger-user-login-assign-form');

    $this->drupalLogout();
    $this->drupalLogin($admin_user);
    $this->assertText(t('action_example_basic_action fired'));

    // 2. 解锁: 当查看用户信息时，解锁该用户
    $normal_user = $this->drupalCreateUser();
    // Create blocked user.
    user_save($normal_user, array('status' => 0));
    $normal_user = user_load($normal_user->uid, TRUE);
    $this->assertFalse($normal_user->status, 'Normal user status has been set to blocked');

    $hash = drupal_hash_base64('action_example_unblock_user_action');
    $edit = array('aid' => $hash);
    $this->drupalPost('admin/structure/trigger/user', $edit, t('Assign'), array(), array(), 'trigger-user-view-assign-form');

    $this->drupalGet("user/$normal_user->uid");
    $normal_user = user_load($normal_user->uid, TRUE);
    $this->assertTrue($normal_user->status, 'Normal user status has been set to unblocked');
    $this->assertRaw(t('Unblocked user %name', array('%name' => $normal_user->name)));

    // 3. 建立一个用户，该用户发布的内容会置顶。
    $sticky_user = $this->drupalCreateUser(
      array(
        'access comments',
        'access content',
        'post comments',
        'skip comment approval',
        'create article content',
      )
    );

    $action_label = $this->randomName();
    $edit = array(
      'actions_label' => $action_label,
      'author' => $sticky_user->name,
    );
    $aid = $this->configureAdvancedAction('action_example_node_sticky_action', $edit);
    $edit = array('aid' => drupal_hash_base64($aid));
    $this->drupalPost('admin/structure/trigger/node', $edit, t('Assign'), array(), array(), 'trigger-node-insert-assign-form');
    // 现在创建一个Node，查看是否置顶。
    $this->drupalLogout();
    $this->drupalLogin($sticky_user);
    $node = $this->drupalCreateNode();
    $this->assertTrue($node->sticky, 'Node在被创建后会被置顶');
  }
}
