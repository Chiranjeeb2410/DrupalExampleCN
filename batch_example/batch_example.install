<?php

/**
 * @file
 * batch_example模块的安装、更新以及反安装函数。
 */

/**
 * 批处理模式的更新函数实例。
 *
 * 因为有些更新函数需要batch API，$sandbox提供了一个存储状态的地方。当
 * $sandbox[‘#finished’] == TRUE时，调用这个更新函数的过程就结束了。
 *
 * $sandbox参数提供了一种在多重调用时保存数据的方法。当$sandbox['#finished'] == 1时，
 * 执行就结束了。
 *
 * 空函数'update'在系统中不改变状态，只是简单的载入每个Node。
 *
 * 为了让update函数循环执行，执行了一个查询
 * “update system set schema_version = 0 where name = 'batch_example';”，
 * 然后运行'/update.php'。
 *
 * @ingroup batch_example
 * @param $sandbox
 * @return
 */
function batch_example_update_7100(&$sandbox) {
  $ret = array();

  // 为方便起见，使用sandbox来在多次成功执行之间保存信息，以实现过程跟踪。
  if (!isset($sandbox['progress'])) {
    // 处理完成的Node数量
    $sandbox['progress'] = 0;
    // 需要处理的Node数量
    $sandbox['max'] = db_query('SELECT COUNT(nid) FROM {node}')->fetchField();
    // 运行期间存储信息
    $sandbox['messages'] = array();
    // 查询中处理的上一个Node
    $sandbox['current_node'] = -1;
  }

  // 把Node分为10个一组（随意分组）。
  // 当处理一个组时，批处理引擎会判断是否应该继续处理同一个请求；
  // 还是为用户提供一个进度反馈之后，等待下一次请求。
  $limit = 10;

  // 获取下一组Nid
  $result = db_select('node', 'n')
    ->fields('n', array('nid'))
    ->orderBy('n.nid', 'ASC')
    ->where('n.nid > :nid', array(':nid' => $sandbox['current_node']))
    ->extend('PagerDefault')
    ->limit($limit)
    ->execute();
  foreach ($result as $row) {
    // 这里我们实际上是对当前Node执行了一个空的'更新'
    $node = db_query('SELECT nid FROM {node} WHERE nid = :nid', array(':nid' => $row->nid))->fetchField();

    // 更新进度信息。
    $sandbox['progress']++;
    $sandbox['current_node'] = $row->nid;
  }

  // 设置"完成"状态，以此告知批处理引擎是否需要重新运行本函数。如果设置为浮点数，会以此为
  // 进度，用以更新进度条。
  $sandbox['#finished'] = ($sandbox['progress'] >= $sandbox['max']) ? TRUE : ($sandbox['progress'] / $sandbox['max']);


  // 设置一个运行信息；拷贝$sandbox，以便进行修改。
  // 这是一个简单的调试方法，来示范如何获得每一个传递给hook_update_N()的状态。
  $sandbox_status = $sandbox;
  // 不希望输出这些东西
  unset($sandbox_status['messages']);
  $sandbox['messages'][] = t('$sandbox=') . print_r($sandbox_status, TRUE);

  if ($sandbox['#finished']) {
    // hook_update_N()可以返回一个字符串显示给用户。
    $final_message = '<ul><li>' . implode('</li><li>', $sandbox['messages']) . "</li></ul>";
    return t('The batch_example demonstration update did what it was supposed to do: @message', array('@message' => $final_message));
  }
}
